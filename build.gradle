import org.jetbrains.intellij.platform.gradle.TestFrameworkType

plugins {
    id 'org.jetbrains.intellij.platform' version '2.0.1'
    id 'java'
    id 'idea'
    id 'groovy'
    id 'application'
}

wrapper {
    gradleVersion = '8.10'
    distributionType = Wrapper.DistributionType.ALL
    // Checksums are found here: https://gradle.org/release-checksums/
    distributionSha256Sum = '682b4df7fe5accdca84a4d1ef6a3a6ab096b3efd5edf7de2bd8c758d95a93703'
}

group 'org.codenarc.idea'
version "${pluginVersion}"
String idePlatformVersion = '2024.2.0.1'

repositories {
    mavenCentral()
    intellijPlatform {
        defaultRepositories()
    }
}

idea {
    project {
        jdkName = '17'
    }
}

sourceSets.create 'generator', {
    compileClasspath += sourceSets.main.output + sourceSets.main.compileClasspath
    runtimeClasspath += sourceSets.main.output + sourceSets.main.runtimeClasspath
    groovy {
        srcDirs 'src/generator'
    }
}

configurations {
    implementation  {
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }

    generatorImplementation.extendsFrom compile, implementation, runtimeOnly
}

dependencies {
    intellijPlatform {
        intellijIdeaCommunity idePlatformVersion

        bundledPlugin 'com.intellij.java'
        bundledPlugin 'org.intellij.groovy'

        pluginVerifier()
        zipSigner()
        instrumentationTools()

        testFramework TestFrameworkType.Platform.INSTANCE
    }
    compileOnly( 'org.apache.groovy:groovy') {
        version {
            strictly "$groovyVersion"
        }
        because 'there are version conflicts when building'
    }
    implementation("org.codenarc:CodeNarc:$codenarcVersion") {
        exclude group: 'org.codehaus.groovy'
        exclude group: 'org.appache.groovy'
    }

    implementation 'io.sentry:sentry:5.1.0'

    runtimeOnly('org.gmetrics:GMetrics-Groovy4:2.1.0') {
        exclude group: 'org.codehaus.groovy'
        exclude group: 'org.appache.groovy'
    }

    compile 'org.apache.commons:commons-lang3:3.9'

    testImplementation "org.spockframework:spock-core:$spockVersion", {
        exclude group: 'org.codehaus.groovy'
        exclude group: 'org.appache.groovy'
    }

    testImplementation 'com.agorapulse.testing:fixt:0.2.1.1'
    testImplementation( 'org.apache.groovy:groovy') {
        version {
            strictly "$groovyVersion"
        }
        because 'there are version conflicts when building'
    }

    generatorImplementation( 'org.apache.groovy:groovy') {
        version {
            strictly "$groovyVersion"
        }
        because 'there are version conflicts when building'
    }
}

logger.lifecycle("Using IDE version $idePlatformVersion")

intellijPlatform {

    pluginConfiguration {
        name = 'CodeNarc'
        version = pluginVersion
    }
}

runIde {
    jvmArgs '-Xmx2g'
}

patchPluginXml {
    sinceBuild = '223.7571.182'
    untilBuild = null
    changeNotes = file('changelog.html').text
    pluginDescription = file('description.html').text
}

application {
    mainClassName = 'org.codenarc.idea.gen.RuleInspectionsGenerator'
}

run {
    // generate classes
    classpath = sourceSets.main.compileClasspath + sourceSets.main.runtimeClasspath + sourceSets.generator.compileClasspath + sourceSets.generator.runtimeClasspath
    args project.rootDir.canonicalPath
}

if (spockVersion.startsWith('2.')) {
    test {
        useJUnitPlatform()
    }
}
